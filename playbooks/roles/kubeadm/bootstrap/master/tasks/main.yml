---


- set_fact:
    pod_network: "{{pod_network[pod_network_plugin]}}"

- name: Reset kubeadm
  become: yes
  command: kubeadm reset

# It by design does not install a networking solution for you, which means you have to install a third-party CNI-compliant networking solution yourself using kubectl apply
- name: Init master of kubernetes
  become: yes
  command: |
    kubeadm init --token={{kube_token}} \
           --apiserver-advertise-address={{inventory_hostname}} \
           --pod-network-cidr={{pod_network.cidr}}

# to make kubectl work for your non-root user
# mkdir -p $HOME/.kube
# sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
# sudo chown $(id -u):$(id -g) $HOME/.kube/config
- block:
  - name: create dir 
    file: 
      path: ~/.kube
      state: directory

  - set_fact:
      user_name: "{{ ansible_user_id }}"
      user_home: "{{ ansible_user_dir }}"
    
  - name: copy admin.conf
    become: yes
    copy: 
      src: /etc/kubernetes/admin.conf
      dest: "{{user_home}}/.kube/config"
      owner: "{{user_name}}"
      group: "{{user_name}}"
      remote_src: yes


# kube-dns, an internal helper service will not start up before a network is installed. kubeadm only supports Container Network Interface (CNI) based networks 
- name: Install Pod network addon
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/v0.10.0/Documentation/kube-flannel.yml
  with_items: "{{pod_network.plugins}}"


