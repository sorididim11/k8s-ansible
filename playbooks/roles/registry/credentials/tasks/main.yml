---

- name: Log into docker registry
  become: yes
  docker_login:
    registry: "{{service.machine_fqdn}}"
    username: "{{service.admin.id}}"
    password: "{{service.admin.pwd}}"
    reauthorize: yes


- name: Archive credential of the registry 
  become: yes
  archive:
    path: ~/.docker
    dest: "{{ dcos_bootstrap_root_path }}/genconf/serve/auth/docker.tar.gz"
    format: tar
  tags: registry-post


- name: Download docker registry token 
  get_url:
    url: "{{dcos_bootstrap_url}}/auth/docker.tar.gz"
    dest: "{{ ansible_user_dir }}/docker.tar.gz"
    force: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public


- name: Unarchive  docker.tar.gz
  unarchive:
      src: "{{ ansible_user_dir }}/docker.tar.gz"
      dest: /tmp
      remote_src: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public


- name: Insert docker token to /etc/mesosphere/docker_credentials file
  become: yes
  copy:
    #content: "{{hostvars[groups['dcos_bootstrap'][0]].docker_token | to_nice_json}}"
    remote_src: yes
    src: /tmp/.docker/config.json
    dest: /etc/mesosphere/docker_credentials
    backup: yes
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public


- name: Restart dcos agent 
  become: yes
  systemd: name={{ (item in groups['dcos_slaves']) | ternary('dcos-mesos-slave', 'dcos-mesos-slave-public') }} state=restarted
  delegate_to: "{{item}}"
  with_inventory_hostnames:
    - dcos_slaves:dcos_slaves_public
