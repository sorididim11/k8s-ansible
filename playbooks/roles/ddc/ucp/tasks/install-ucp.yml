---

- name: Check if UCP is running on controllers.
  shell: docker ps -a --filter status=running --filter name=ucp-controller --format "{{ '{{' }}.ID{{ '}}' }}"
  changed_when: False
  register: ucp_controller


- name: Upload the UCP subscription file.
  copy:
    src: "{{ local_docker_ucp_subscription_file }}"
    dest: "{{ docker_ucp_subscription_file }}"


- name: Install the first UCP controller.
  shell: docker run --rm --name ucp
        -v /var/run/docker.sock:/var/run/docker.sock
        -v {{ docker_ucp_subscription_file }}:/docker_subscription.lic
        docker/ucp:{{ docker_ucp_version }} install
        --admin-username {{ docker_ucp_admin_username }}
        --admin-password {{ docker_ucp_admin_password }}
        --swarm-port {{ docker_ucp_swarm_port }}
        --controller-port {{ docker_ucp_controller_port }}
        {% if docker_ucp_host_address is defined %}--host-address {{ docker_ucp_host_address }}{% endif %}
        {% if docker_ucp_san is defined %}{% for item in docker_ucp_san %}--san {{ item }} {% endfor %}{% endif %}
        {{ docker_ucp_extra_args }}
  when: ucp_controller['stdout'] == ""


- name: Export the UCP instance ID.
  shell: docker run --rm --name ucp
        -v /var/run/docker.sock:/var/run/docker.sock
        docker/ucp:{{ docker_ucp_version }} id
  register: ucp_instance_id
  changed_when: False



- name: Check if UCP is running on cluster nodes.
  shell: docker ps -a --filter status=running --filter name=ucp-swarm-join --format "{{ '{{' }}.ID{{ '}}' }}"
  changed_when: False
  register: ucp_node
